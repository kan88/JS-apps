//dov enents https://developer.mozilla.org/ru/docs/Web/Events

//find onclick

var button = document.querySelector('.button');

button.addEventListener('click', function () {
  // Инструкции
});



// Объект event — параметр функции-обработчика. Он всегда передаётся браузером в эту 
// функцию в момент наступления события. Этот объект содержит много полезных свойств и 
// методов, в частности метод, который отменяет действие по умолчанию: preventDefault().

// Чтобы использовать свойства и методы объекта event, достаточно указать этот объект 
// параметром функции-обработчика и написать инструкции. Остальное сделает JavaScript. 
// Среди некоторых разработчиков принято называть параметр сокращённо — evt. Это позволяет 
// избежать некоторых ошибок, о которых мы поговорим в будущих тренажёрах. Мы тоже будем 
// называть параметр обработчика evt. Объект события будет передан в функцию, как только это 
// событие случится.

link.addEventListener('click', function(evt) {
  // Отменяем действие по умолчанию
  evt.preventDefault();

  // Добавляем инструкции для события клика
  popup.classList.add('modal--show')
});
// В примере мы отменили действие по умолчанию и при клике по ссылке переход не произойдёт.
//  Вместо этого при клике в консоль выведется сообщение: Произошёл клик

//classList.remove('')

var popup = document.querySelector('.popup');
// Перед названием селектора ставим точку

popup.classList.remove('popup--open');
// Перед названием класса точка не ставится

// У события «нажатие на клавишу» есть специальное название — keydown. 
// Такое событие срабатывает при нажатии на любую клавишу. Обратите внимание, 
// слушать это событие можно только на элементах, которые имеют состояние фокуса: поля ввода, кнопки, элементы с атрибутом tabindex, документ. При нажатии фокус должен находиться на соответствующем элементе.

document.addEventListener('keydown', function() {
  // Код отсюда выполнится при каждом нажатии любой клавиши
});

//ссылка на артикулы кливиш https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode
document.addEventListener('keydown', function(evt) {
    // Проверяем, что код клавиши равен 27
    if (evt.keyCode === 27) {
      // Код отсюда выполнится только при нажатии ESC
    }
  });

  // Мы уже умеем получать данные из поля ввода, но только после того, как форма была отправлена. Сейчас же нам нужно оценить длину комментария ещё до отправки. Как быть? Воспользуемся обработчиком событий oninput (в переводе с английского это означает «при вводе»). Инструкции внутри обработчика oninput выполняются каждый раз, когда значение в поле ввода меняется. Например:

// Найдём поле ввода
let textarea = document.querySelector('textarea');

// Добавим обработчик событий
textarea.oninput = function () {
  // Выведем данные из поля ввода
  console.log(textarea.value);
};

let text = 'Я люблю JavaScript';
console.log(text.length); // Выведет: 18

let textarea = document.querySelector('textarea');
console.log(textarea.value); // Выведет: Кекс
console.log(textarea.value.length); // Выведет: 4

// Пользователи новостного сайта должны видеть, какой длины набранный ими текст. Чтобы вывести длину на страницу, изменим текстовое содержимое элемента с классом char-counter. Этот элемент находится прямо под полем ввода:

<span class="text-counter">
  Использовано <output class="char-counter">0</output>/142 символов
</span>

// Блокировать и разблокировать кнопку в JavaScript можно, присваивая булевы значения свойству disabled (по-английски значит «отключён») этой кнопки. Если присвоено значение true, то кнопка заблокирована, а если false — разблокирована.

let button = document.querySelector('button');

// Блокирует кнопку
button.disabled = true;

// Разблокирует кнопку
button.disabled = false;