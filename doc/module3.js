объект math namespace или пространство имен.

1.Один модуль одна задача. 
2. В одном модуле должен быть смысл. Например валидация всех форм.
3. библиотека будет передаваться из одного проекта в другой


import './dialog.js';
import './setup.js';
import {createElement} from './create-element.js';

createElement();


именуем кебаб-кейс

дуе становится read only 

export только const переменных. 
если экспортировать объекты то данные объектов меняются в обоих файлах.

в импортируемом файле нельзя переписать let переменную

желательно экспортировать только функции


В одной из прошлых статей мы выяснили, что ни импорт, ни экспорт не могут быть вложены в другие блоки кода, и что импорт всегда должен быть вверху модуля.

Теперь давайте рассмотрим, как import загружает скрипт по URL. Путь может быть указан как в одинарных:

import mother from './mother.js';
Так и в двойных кавычках:

import mother from "./mother.js";
Путь может быть абсолютным или относительным. Поддерживаются:

import 'https://jakearchibald.com/utils/bar.js'; // URL
import '/utils/bar.js'; // Абсолютный путь относительно домена
import './bar.js'; // Относительный путь от текущего модуля
import '../bar.js'; // Относительный путь от родительской директории
Не поддерживаются:

import 'bar.js';
import 'utils/bar.js';
«Не поддерживаются» в данном случае значит, что «синтаксис зарезервирован». На самом деле такой импорт используется для подключения сторонних библиотек из пакетных менеджеров вроде npm и не является частью стандарта ECMAScript.